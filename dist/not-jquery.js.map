{"version":3,"sources":["not-jquery.js","../src/not-jquery.ts"],"names":["NotJQuery","constructor","selector","this","elements","window","document","querySelectorAll","console","error","assertElement","element","action","length","Array","isArray","i","len","Element","warn","addClass","className","el","classList","add","removeClass","forEach","remove","html","htmlContent","_a","undefined","innerHTML","find","foundElements","children","push","instance","val","value","on","event","handler","addEventListener","off","log","removeEventListener","clone","cloneNode","parentNode","replaceChild","_get_width_or_height","toGet","innerWidth","innerHeight","getBoundingClientRect","width","height","ready","callback","readyState","ProxyNotJQuery","Proxy","get","target","prop","Reflect","$","jQuery"],"mappings":"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","file":"not-jquery.js","sourcesContent":["\"use strict\";class NotJQuery{constructor(e){this.elements=null,e===window||e===document?this.elements=[e]:\"string\"==typeof e?this.elements=document.querySelectorAll(e):console.error(`Element ${e} not compatible!`),console.log(\"Elements: \",this.elements)}assertElement(e,t){let n=0;e||(e=this.elements),n=Array.isArray(e)?e.length:1;for(let s=0,l=n;s<l;s++)if(!(e instanceof Element))return console.warn(`Cannot do ${t||\"that\"}, ${typeof e} (${e}) is not supported!`),!1;return!0}addClass(e){for(let t=0,n=this.elements.length;t<n;t++){let n=this.elements[t];this.assertElement(n,\"addClass\")&&n.classList.add(e)}return this}removeClass(e){return this.assertElement(null,\"removeClass\")?(this.elements.forEach((t=>t.classList.remove(e))),this):this}html(e){var t;return this.assertElement(null,\"html\")?void 0===e?(null===(t=this.elements[0])||void 0===t?void 0:t.innerHTML)||\"\":(this.elements.forEach((t=>t.innerHTML=e)),this):this}find(e){if(!this.assertElement(null,\"find\"))return this;const t=[];this.elements.forEach((n=>{const s=n.querySelectorAll(e);t.push(...s)}));const n=new NotJQuery(null);return n.elements=t,n}val(e){var t;return this.assertElement(null,\"val\")?void 0===e?(null===(t=this.elements[0])||void 0===t?void 0:t.value)||\"\":(this.elements.forEach((t=>t.value=e)),this):this}on(e,t){return this.elements.forEach((n=>n.addEventListener(e,t))),this}off(e,t){var n;for(let s=0,l=this.elements.length;s<l;s++){const l=this.elements[s];if(l instanceof Element||l===window||l===document)if(e)if(t)l.removeEventListener(e,t);else{const e=l.cloneNode(!0);null===(n=l.parentNode)||void 0===n||n.replaceChild(e,l)}else console.warn(\"You must specify an event type when calling .off().\")}return this}_get_width_or_height(e){const t=this.elements[0];return t===window?\"width\"===e?window.innerWidth:window.innerHeight:t instanceof Element?t.getBoundingClientRect()[e]:(console.warn(\"Cannot determine width for the given selector.\"),null)}width(){return this._get_width_or_height(\"width\")}height(){return this._get_width_or_height(\"height\")}ready(e){this.elements[0]===document?\"loading\"===document.readyState?document.addEventListener(\"DOMContentLoaded\",e):e():console.warn(\"ready() is only available on the document object.\")}}const ProxyNotJQuery=e=>{const t=new NotJQuery(e);return new Proxy(t,{get:(e,t)=>Reflect.get(e,t)})};window.$=ProxyNotJQuery,window.jQuery=window.$;\n//# sourceMappingURL=not-jquery.js.map\n","class NotJQuery {\n  elements: NodeListOf<Element> | Array<Window | Document> | any;\n\n  constructor(selector: string | Element | Window | Document) {\n    this.elements = null;\n    if (selector === window || selector === document) {\n      // Handle the window object explicitly\n      this.elements = [selector];\n    } else if (typeof selector === \"string\") {\n      this.elements = document.querySelectorAll(selector);\n    } else {\n      console.error(`Element ${selector} not compatible!`);\n    }\n  }\n\n  private assertElement(element?: any, action?: string): boolean {\n    let length = 0;\n\n    if (!element) element = this.elements;\n\n    if (Array.isArray(element)) {\n      length = element.length;\n    } else length = 1;\n\n    for (let i = 0, len = length; i < len; i++) {\n      if (!(element instanceof Element)) {\n        console.warn(\n          `Cannot do ${action || \"that\"}, ${typeof element} (${element}) is not supported!`,\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n\n  //region Emulations\n  public addClass(className: string): NotJQuery {\n    for (let i = 0, len = this.elements.length; i < len; i++) {\n      let el = this.elements[i];\n      if (!this.assertElement(el, \"addClass\")) continue;\n      el.classList.add(className);\n    }\n    return this;\n  }\n\n  public removeClass(className: string): NotJQuery {\n    if (!this.assertElement(null, \"removeClass\")) return this;\n    this.elements.forEach((el: Element) => el.classList.remove(className));\n    return this;\n  }\n\n  public html(htmlContent?: string): string | NotJQuery {\n    if (!this.assertElement(null, \"html\")) return this;\n    if (htmlContent === undefined) {\n      return this.elements[0]?.innerHTML || \"\";\n    }\n    this.elements.forEach((el: Element) => (el.innerHTML = htmlContent));\n    return this;\n  }\n\n  public find(selector: string): NotJQuery {\n    if (!this.assertElement(null, \"find\")) return this;\n    const foundElements: Element[] = [];\n    this.elements.forEach((el: Element) => {\n      const children = el.querySelectorAll(selector);\n      foundElements.push(...children);\n    });\n\n    const instance = new NotJQuery(null as any); // Create a new instance\n    (instance as any).elements = foundElements; // Assign found elements\n    return instance;\n  }\n\n  public val(value?: string): string | NotJQuery {\n    if (!this.assertElement(null, \"val\")) return this;\n    if (value === undefined) {\n      return (this.elements[0] as HTMLInputElement)?.value || \"\";\n    }\n    this.elements.forEach(\n      (el: Element) => ((el as HTMLInputElement).value = value),\n    );\n    return this;\n  }\n\n  public on(event: string, handler: EventListener): NotJQuery {\n    // No assert?\n    this.elements.forEach((el: Element | Window) =>\n      el.addEventListener(event, handler),\n    );\n    return this;\n  }\n\n  public off(event: string, handler: EventListener): NotJQuery {\n    console.log(this.elements);\n    for (let i = 0, len = this.elements.length; i < len; i++) {\n      const el = this.elements[i];\n      if (el instanceof Element || el === window || el === document) {\n        //Manual assertion\n        if (event) {\n          if (handler) {\n            // Remove a specific handler for a specific event\n            el.removeEventListener(event, handler);\n          } else {\n            // Remove all handlers for a specific event\n            const clone = el.cloneNode(true) as Element;\n            el.parentNode?.replaceChild(clone, el);\n          }\n        } else {\n          console.warn(\"You must specify an event type when calling .off().\");\n        }\n      }\n    }\n    return this;\n  }\n\n  private _get_width_or_height(toGet: \"width\" | \"height\"): number | null {\n    const el = this.elements[0];\n    if (el === window) {\n      return toGet === \"width\" ? window.innerWidth : window.innerHeight;\n    } else if (el instanceof Element) {\n      return el.getBoundingClientRect()[toGet as keyof DOMRect] as number;\n    }\n    console.warn(\"Cannot determine width for the given selector.\");\n    return null;\n  }\n\n  public width(): number | null {\n    return this._get_width_or_height(\"width\");\n  }\n\n  public height(): number | null {\n    return this._get_width_or_height(\"height\");\n  }\n\n  public ready(callback: () => void): void {\n    if (this.elements[0] === document) {\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n      } else {\n        // If already ready, execute the callback immediately\n        callback();\n      }\n    } else {\n      console.warn(\"ready() is only available on the document object.\"); // I'm not sure about that\n    }\n  }\n\n  //endregion\n}\n\nconst ProxyNotJQuery = (selector: string | Element | Window) => {\n  // Ensure correct usage of the class constructor\n  const instance = new NotJQuery(selector);\n\n  return new Proxy(instance, {\n    get(target, prop) {\n      return Reflect.get(target, prop);\n    },\n  });\n};\n\n// Export as $ to be used as jQuery\n// TODO: Verify if we should export jQuery too\n(window as any).$ = ProxyNotJQuery;\n(window as any).jQuery = (window as any).$;\n"]}