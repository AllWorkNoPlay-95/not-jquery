{"version":3,"sources":["not-jquery.js","../src/not-jquery.ts"],"names":["NotJQuery","constructor","selector","this","elements","window","document","querySelectorAll","console","error","log","assertElement","element","action","length","Array","isArray","i","len","Element","warn","addClass","className","forEach","el","classList","add","removeClass","remove","html","htmlContent","_a","undefined","innerHTML","find","foundElements","children","push","instance","val","value","on","event","handler","addEventListener","off","arguments","removeEventListener","clone","cloneNode","parentNode","replaceChild","get_width_or_height","toGet","innerWidth","innerHeight","getBoundingClientRect","width","height","ready","callback","$","readyState","ProxyNotJQuery","Proxy","get","target","prop","Reflect","jQuery"],"mappings":"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","file":"not-jquery.js","sourcesContent":["\"use strict\";class NotJQuery{constructor(e){this.elements=null,e===window||e===document?this.elements=[e]:\"string\"==typeof e?this.elements=document.querySelectorAll(e):console.error(`Element ${e} not compatible!`),console.log(\"Elements: \",this.elements)}assertElement(e,t){let n=0;e||(e=this.elements),n=Array.isArray(e)?e.length:1;for(let s=0,o=n;s<o;s++)if(!(e instanceof Element))return console.warn(`Cannot ${t||\"do that\"}, ${typeof e} (${e}) is not supported!`),!1;return!0}addClass(e){return this.assertElement()?(this.elements.forEach((t=>{this.assertElement(t)?t.classList.add(e):console.warn(`Cannot add class '${e}', ${typeof t} (${t}) is not supported`)})),this):this}removeClass(e){return this.assertElement()?(this.elements.forEach((t=>t.classList.remove(e))),this):this}html(e){var t;return this.assertElement()?void 0===e?(null===(t=this.elements[0])||void 0===t?void 0:t.innerHTML)||\"\":(this.elements.forEach((t=>t.innerHTML=e)),this):this}find(e){if(!this.assertElement())return this;const t=[];this.elements.forEach((n=>{const s=n.querySelectorAll(e);t.push(...s)}));const n=new NotJQuery(null);return n.elements=t,n}val(e){var t;return this.assertElement()?void 0===e?(null===(t=this.elements[0])||void 0===t?void 0:t.value)||\"\":(this.elements.forEach((t=>t.value=e)),this):this}on(e,t){return this.elements.forEach((n=>n.addEventListener(e,t))),this}off(e,t){return console.log(arguments,this.elements),this.elements.forEach((n=>{var s;if(n instanceof Element||n===window||n===document)if(e)if(t)n.removeEventListener(e,t);else{const e=n.cloneNode(!0);null===(s=n.parentNode)||void 0===s||s.replaceChild(e,n)}else console.warn(\"You must specify an event type when calling .off().\")})),this}get_width_or_height(e){const t=this.elements[0];return t===window?\"width\"===e?window.innerWidth:window.innerHeight:t instanceof Element?t.getBoundingClientRect()[e]:(console.warn(\"Cannot determine width for the given selector.\"),null)}width(){return this.get_width_or_height(\"width\")}height(){return this.get_width_or_height(\"height\")}ready(e){console.log($),console.log(\"CB\",e),this.elements[0]===document?\"loading\"===document.readyState?document.addEventListener(\"DOMContentLoaded\",e):e():console.warn(\"ready() is only available on the document object.\")}}const ProxyNotJQuery=e=>{const t=new NotJQuery(e);return new Proxy(t,{get:(e,t)=>Reflect.get(e,t)})};window.$=ProxyNotJQuery,window.jQuery=window.$;\n//# sourceMappingURL=not-jquery.js.map\n","class NotJQuery {\n  elements: NodeListOf<Element> | Array<Window | Document> | any;\n\n  constructor(selector: string | Element | Window | Document) {\n    this.elements = null;\n    if (selector === window || selector === document) {\n      // Handle the window object explicitly\n      this.elements = [selector];\n    } else if (typeof selector === \"string\") {\n      this.elements = document.querySelectorAll(selector);\n    } else {\n      console.error(`Element ${selector} not compatible!`);\n    }\n    console.log(\"Elements: \", this.elements);\n  }\n\n  private assertElement(element?: any, action?: string): boolean {\n    let length = 0;\n\n    if (!element) element = this.elements;\n\n    if (Array.isArray(element)) {\n      length = element.length;\n    } else length = 1;\n\n    for (let i = 0, len = length; i < len; i++) {\n      if (!(element instanceof Element)) {\n        console.warn(\n          `Cannot ${action || \"do that\"}, ${typeof element} (${element}) is not supported!`,\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n\n  //region Emulations\n  public addClass(className: string): NotJQuery {\n    if (!this.assertElement()) return this;\n    this.elements.forEach((el: Element) => {\n      if (this.assertElement(el)) {\n        el.classList.add(className);\n      } else\n        console.warn(\n          `Cannot add class '${className}', ${typeof el} (${el}) is not supported`,\n        );\n    });\n    return this;\n  }\n\n  public removeClass(className: string): NotJQuery {\n    if (!this.assertElement()) return this;\n    this.elements.forEach((el: Element) => el.classList.remove(className));\n    return this;\n  }\n\n  public html(htmlContent?: string): string | NotJQuery {\n    if (!this.assertElement()) return this;\n    if (htmlContent === undefined) {\n      return this.elements[0]?.innerHTML || \"\";\n    }\n    this.elements.forEach((el: Element) => (el.innerHTML = htmlContent));\n    return this;\n  }\n\n  public find(selector: string): NotJQuery {\n    if (!this.assertElement()) return this;\n    const foundElements: Element[] = [];\n    this.elements.forEach((el: Element) => {\n      const children = el.querySelectorAll(selector);\n      foundElements.push(...children);\n    });\n\n    const instance = new NotJQuery(null as any); // Create a new instance\n    (instance as any).elements = foundElements; // Assign found elements\n    console.log(instance);\n    return instance;\n  }\n\n  public val(value?: string): string | NotJQuery {\n    if (!this.assertElement()) return this;\n    if (value === undefined) {\n      return (this.elements[0] as HTMLInputElement)?.value || \"\";\n    }\n    this.elements.forEach(\n      (el: Element) => ((el as HTMLInputElement).value = value),\n    );\n    return this;\n  }\n\n  public on(event: string, handler: EventListener): NotJQuery {\n    this.elements.forEach((el: Element | Window) =>\n      el.addEventListener(event, handler),\n    );\n    return this;\n  }\n\n  public off(event: string, handler: EventListener): NotJQuery {\n    console.log(arguments, this.elements);\n    this.elements.forEach((el: any) => {\n      if (el instanceof Element || el === window || el === document) {\n        if (event) {\n          if (handler) {\n            // Remove a specific handler for a specific event\n            el.removeEventListener(event, handler);\n          } else {\n            // Remove all handlers for a specific event\n            const clone = el.cloneNode(true) as Element;\n            el.parentNode?.replaceChild(clone, el);\n          }\n        } else {\n          console.warn(\"You must specify an event type when calling .off().\");\n        }\n      }\n    });\n    return this;\n  }\n\n  private get_width_or_height(toGet: \"width\" | \"height\"): number | null {\n    const el = this.elements[0];\n    if (el === window) {\n      return toGet === \"width\" ? window.innerWidth : window.innerHeight;\n    } else if (el instanceof Element) {\n      return el.getBoundingClientRect()[toGet as keyof DOMRect] as number;\n    }\n    console.warn(\"Cannot determine width for the given selector.\");\n    return null;\n  }\n\n  public width(): number | null {\n    return this.get_width_or_height(\"width\");\n  }\n\n  public height(): number | null {\n    return this.get_width_or_height(\"height\");\n  }\n\n  public ready(callback: () => void): void {\n    // @ts-ignore\n    console.log($);\n    console.log(\"CB\", callback);\n    if (this.elements[0] === document) {\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n      } else {\n        // If already ready, execute the callback immediately\n        callback();\n      }\n    } else {\n      console.warn(\"ready() is only available on the document object.\");\n    }\n  }\n\n  //endregion\n}\n\nconst ProxyNotJQuery = (selector: string | Element | Window) => {\n  // Ensure correct usage of the class constructor\n  const instance = new NotJQuery(selector);\n\n  return new Proxy(instance, {\n    get(target, prop) {\n      return Reflect.get(target, prop);\n    },\n  });\n};\n\n// Export as $ to be used as jQuery\n// TODO: Verify if we should export jQuery too\n(window as any).$ = ProxyNotJQuery;\n(window as any).jQuery = (window as any).$;\n"]}