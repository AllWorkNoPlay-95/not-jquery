{"version":3,"sources":["not-jquery.js","../src/not-jquery.ts"],"names":["NotJQuery","constructor","selector","this","elements","window","document","querySelectorAll","console","error","assertElement","element","action","length","Array","isArray","i","len","el","Element","HTMLDivElement","warn","addClass","className","theseEl","classList","add","removeClass","forEach","remove","find","foundElements","children","push","from","instance","val","value","_a","undefined","on","event","handler","addEventListener","off","removeEventListener","clone","cloneNode","parentNode","replaceChild","_get_width_or_height","toGet","innerWidth","innerHeight","getBoundingClientRect","width","height","each","callback","ready","readyState","ProxyNotJQuery","Proxy","get","target","prop","Reflect","$","jQuery"],"mappings":"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","file":"not-jquery.js","sourcesContent":["\"use strict\";class NotJQuery{constructor(e){this.elements=[],e===window||e===document?this.elements=[e]:\"string\"==typeof e?this.elements=document.querySelectorAll(e):\"object\"==typeof e?this.elements=[e]:console.error(`Element ${e} not compatible!`)}assertElement(e,t){let n=0;e||(e=this.elements),n=Array.isArray(e)?e.length:1;for(let s=0,r=n;s<r;s++){let n=e[s];if(!(n instanceof Element||n===typeof HTMLDivElement))return console.warn(`Cannot do ${t||\"that\"}, ${typeof n} (${n}) is not supported!`),!1}return!0}addClass(e){if(!this.elements)return this;let t=this.elements;for(let n=0,s=t.length;n<s;n++){let s=t[n];this.assertElement(t[n],\"addClass\")&&s.classList.add(e)}return this}removeClass(e){if(!this.assertElement(null,\"removeClass\"))return this;return this.elements.forEach((t=>t.classList.remove(e))),this}find(e){if(!this.assertElement(null,\"find\"))return this;let t=this.elements,n=[];t.forEach((t=>{const s=t.querySelectorAll(e);n.push(...Array.from(s))}));const s=new NotJQuery(null);return s.elements=n,s}val(e){var t;if(!this.assertElement(null,\"val\"))return this;if(void 0===e){this.elements[0];return(null===(t=this.elements[0])||void 0===t?void 0:t.value)||\"\"}return this.elements.forEach((t=>t.value=e)),this}on(e,t){return this.elements.forEach((n=>n.addEventListener(e,t))),this}off(e,t){var n;for(let s=0,r=this.elements.length;s<r;s++){const r=this.elements[s];if(r instanceof Element||r===window||r===document)if(e)if(t)r.removeEventListener(e,t);else{const e=r.cloneNode(!0);null===(n=r.parentNode)||void 0===n||n.replaceChild(e,r)}else console.warn(\"You must specify an event type when calling .off().\")}return this}_get_width_or_height(e){const t=this.elements[0];return t===window?\"width\"===e?window.innerWidth:window.innerHeight:t instanceof Element?t.getBoundingClientRect()[e]:(console.warn(\"Cannot determine width for the given selector.\"),null)}width(){return this._get_width_or_height(\"width\")}height(){return this._get_width_or_height(\"height\")}ready(e){this.elements[0]===document?\"loading\"===document.readyState?document.addEventListener(\"DOMContentLoaded\",e):e():console.warn(\"ready() is only available on the document object.\")}}const ProxyNotJQuery=e=>{const t=new NotJQuery(e);return new Proxy(t,{get:(e,t)=>Reflect.get(e,t)})};window.$=ProxyNotJQuery,window.jQuery=window.$;\n//# sourceMappingURL=not-jquery.js.map\n","type Selector =\n  | NodeListOf<Element>\n  | Element\n  | Window\n  | Document\n  | HTMLDivElement\n  | string;\ntype JElement = Omit<Selector, string> | null;\n\nclass NotJQuery {\n  elements: JElement;\n\n  constructor(selector: Selector) {\n    this.elements = [];\n    if (selector === window || selector === document) {\n      this.elements = [selector];\n    } else if (typeof selector === \"string\") {\n      this.elements = document.querySelectorAll(selector);\n    } else if (typeof selector === \"object\") {\n      this.elements = [selector]; // Duplicate of the first case, but code smell tells me i should do another case for this.\n    } else {\n      console.error(`Element ${selector} not compatible!`);\n    }\n  }\n\n  private assertElement(element?: any, action?: string): boolean {\n    let length = 0;\n\n    if (!element) element = this.elements;\n\n    if (Array.isArray(element)) {\n      length = element.length;\n    } else length = 1;\n\n    for (let i = 0, len = length; i < len; i++) {\n      let el = element[i];\n      if (!(el instanceof Element || el === typeof HTMLDivElement)) {\n        console.warn(\n          `Cannot do ${action || \"that\"}, ${typeof el} (${el}) is not supported!`,\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n\n  //region Emulations\n  public addClass(className: string): NotJQuery {\n    if (!this.elements) return this;\n    let theseEl = this.elements as NodeListOf<Element>;\n    for (let i = 0, len = theseEl.length; i < len; i++) {\n      let el = theseEl[i];\n      if (!this.assertElement(theseEl[i], \"addClass\")) continue;\n      el.classList.add(className);\n    }\n    return this;\n  }\n\n  public removeClass(className: string): NotJQuery {\n    if (!this.assertElement(null, \"removeClass\")) return this;\n    let theseEl = this.elements as NodeListOf<Element>;\n    theseEl.forEach((el: Element) => el.classList.remove(className));\n    return this;\n  }\n\n  // public html(htmlContent?: string): string | NotJQuery { //Not needed?\n  //   if (!this.assertElement(null, \"html\")) return this;\n  //   if (htmlContent === undefined) {\n  //     return this.elements[0]?.innerHTML || \"\";\n  //   }\n  //   this.elements.forEach((el: Element) => (el.innerHTML = htmlContent));\n  //   return this;\n  // }\n\n  public find(selector: string): NotJQuery {\n    if (!this.assertElement(null, \"find\")) return this;\n    let theseEl = this.elements as NodeListOf<Element>;\n    let foundElements: Element[] = [];\n\n    theseEl.forEach((el: Element) => {\n      const children = el.querySelectorAll(selector);\n      foundElements.push(...Array.from(children));\n    });\n\n    const instance = new NotJQuery(null as any); // Create a new instance\n    (instance as any).elements = foundElements; // Assign found elements\n    return instance;\n  }\n\n  public val(value?: string): string | NotJQuery {\n    if (!this.assertElement(null, \"val\")) return this;\n    if (value === undefined) {\n      const el = this.elements[\n        0 as keyof typeof this.elements\n      ] as HTMLInputElement;\n      return (\n        (this.elements[0 as keyof typeof this.elements] as HTMLInputElement)\n          ?.value || \"\"\n      );\n    }\n    (this.elements as Element[]).forEach(\n      (el: Element) => ((el as HTMLInputElement).value = value),\n    );\n    return this;\n  }\n\n  public on(event: string, handler: EventListener): NotJQuery {\n    // No assert?\n    (this.elements as Element[]).forEach((el: Element | Window) =>\n      el.addEventListener(event, handler),\n    );\n    return this;\n  }\n\n  public off(event: string, handler: EventListener): NotJQuery {\n    for (let i = 0, len = (this.elements as Element[]).length; i < len; i++) {\n      const el = this.elements[i as keyof typeof this.elements] as any;\n      if (el instanceof Element || el === window || el === document) {\n        //Manual assertion\n        if (event) {\n          if (handler) {\n            // Remove a specific handler for a specific event\n            el.removeEventListener(event, handler);\n          } else {\n            // Remove all handlers for a specific event\n            const clone = el.cloneNode(true) as Element;\n            el.parentNode?.replaceChild(clone, el);\n          }\n        } else {\n          console.warn(\"You must specify an event type when calling .off().\");\n        }\n      }\n    }\n    return this;\n  }\n\n  private _get_width_or_height(toGet: \"width\" | \"height\"): number | null {\n    const el = this.elements[0 as keyof typeof this.elements] as JElement;\n    if (el === window) {\n      return toGet === \"width\" ? window.innerWidth : window.innerHeight;\n    } else if (el instanceof Element) {\n      return el.getBoundingClientRect()[toGet as keyof DOMRect] as number;\n    }\n    console.warn(\"Cannot determine width for the given selector.\");\n    return null;\n  }\n\n  public width(): number | null {\n    return this._get_width_or_height(\"width\");\n  }\n\n  public height(): number | null {\n    return this._get_width_or_height(\"height\");\n  }\n\n  public each(callback: (i: number, el: Element) => void): NotJQuery {\n    if (!this.elements || (this.elements as NodeListOf<Element>).length === 0) {\n      console.warn(\"No elements to iterate through.\");\n      return this;\n    }\n    (this.elements as NodeListOf<Element>).forEach((el, i) => {\n      callback(i, el);\n    });\n  }\n\n  public ready(callback: () => void): void {\n    if (this.elements[0 as keyof typeof this.elements] === document) {\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n      } else {\n        // If already ready, execute the callback immediately\n        callback();\n      }\n    } else {\n      console.warn(\"ready() is only available on the document object.\"); // I'm not sure about that\n    }\n  }\n\n  //endregion\n}\n\nconst ProxyNotJQuery = (selector: string | Element | Window) => {\n  // Ensure correct usage of the class constructor\n  const instance = new NotJQuery(selector);\n\n  return new Proxy(instance, {\n    get(target, prop) {\n      return Reflect.get(target, prop);\n    },\n  });\n};\n\n// Export as $ to be used as jQuery\n// TODO: Verify if we should export jQuery too\n(window as any).$ = ProxyNotJQuery;\n(window as any).jQuery = (window as any).$;\n"]}